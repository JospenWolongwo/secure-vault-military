@use '@angular/material' as mat;

// Define the palettes for your theme using the Material Design palettes
$primary-palette: (
  50: #e3f2fd,
  100: #bbdefb,
  200: #90caf9,
  300: #64b5f6,
  400: #42a5f5,
  500: #2196f3, // Primary color
  600: #1e88e5,
  700: #1976d2,
  800: #1565c0,
  900: #0d47a1,
  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: rgba(black, 0.87),
    400: white,
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
  )
);

$accent-palette: (
  50: #fce4ec,
  100: #f8bbd0,
  200: #f48fb1,
  300: #f06292,
  400: #ec407a,
  500: #e91e63, // Accent color
  600: #d81b60,
  700: #c2185b,
  800: #ad1457,
  900: #880e4f,
  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: white,
    400: white,
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
  )
);

$warn-palette: (
  50: #ffebee,
  100: #ffcdd2,
  200: #ef9a9a,
  300: #e57373,
  400: #ef5350,
  500: #f44336, // Warn color
  600: #e53935,
  700: #d32f2f,
  800: #c62828,
  900: #b71c1c,
  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: rgba(black, 0.87),
    400: white,
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
  )
);

// Create the theme object
$theme: mat.define-light-theme((
  color: (
    primary: mat.define-palette($primary-palette, 500, 200, 800),
    accent: mat.define-palette($accent-palette, 500, 200, 800),
    warn: mat.define-palette($warn-palette, 500, 200, 800),
  ),
  typography: mat.define-typography-config(
    $font-family: 'Roboto, "Helvetica Neue", sans-serif',
    $headline-1: mat.define-typography-level(6rem, 6rem, 300, $letter-spacing: -0.05em),
    $headline-2: mat.define-typography-level(3.5rem, 3.5rem, 400, $letter-spacing: -0.02em),
    $headline-3: mat.define-typography-level(2.8rem, 3rem, 400, $letter-spacing: -0.005em),
    $headline-4: mat.define-typography-level(2.1rem, 2.5rem, 400),
    $headline-5: mat.define-typography-level(1.5rem, 2rem, 400),
    $headline-6: mat.define-typography-level(1.25rem, 2rem, 500),
    $subtitle-1: mat.define-typography-level(1rem, 1.75rem, 400),
    $subtitle-2: mat.define-typography-level(0.875rem, 1.5rem, 500),
    $body-1: mat.define-typography-level(1rem, 1.5rem, 400),
    $body-2: mat.define-typography-level(0.875rem, 1.25rem, 500),
    $caption: mat.define-typography-level(0.75rem, 1.25rem, 400),
    $button: mat.define-typography-level(0.875rem, 0.875rem, 500),
  ),
  density: 0,
));

// Custom function to get theme color
@function get-theme-color($color, $hue: default, $opacity: 1) {
  @return rgba(mat.get-color-from-palette($theme, $color, $hue), $opacity);
}

// Custom function to get theme typography
@function get-typography-level($level) {
  @return mat.typography-level($theme, $level);
}

// Custom mixins for responsive design
@mixin respond-to($breakpoint) {
  @if $breakpoint == 'small' {
    @media (max-width: 599px) { @content; }
  } @else if $breakpoint == 'medium' {
    @media (min-width: 600px) and (max-width: 959px) { @content; }
  } @else if $breakpoint == 'large' {
    @media (min-width: 960px) { @content; }
  } @else if $breakpoint == 'xlarge' {
    @media (min-width: 1280px) { @content; }
  } @else if $breakpoint == 'xxlarge' {
    @media (min-width: 1920px) { @content; }
  } @else if $breakpoint == 'portrait' {
    @media (orientation: portrait) { @content; }
  } @else if $breakpoint == 'landscape' {
    @media (orientation: landscape) { @content; }
  }
}

// Custom mixin for elevation
@mixin elevation($level: 1) {
  @if $level == 0 {
    box-shadow: none;
  } @else if $level == 1 {
    box-shadow: 0 2px 1px -1px rgba(0, 0, 0, 0.2), 0 1px 1px 0 rgba(0, 0, 0, 0.14), 0 1px 3px 0 rgba(0, 0, 0, 0.12);
  } @else if $level == 2 {
    box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);
  } @else if $level == 3 {
    box-shadow: 0 3px 3px -2px rgba(0, 0, 0, 0.2), 0 3px 4px 0 rgba(0, 0, 0, 0.14), 0 1px 8px 0 rgba(0, 0, 0, 0.12);
  } @else if $level == 4 {
    box-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.2), 0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 1px 10px 0 rgba(0, 0, 0, 0.12);
  } @else if $level == 5 {
    box-shadow: 0 3px 5px -1px rgba(0, 0, 0, 0.2), 0 5px 8px 0 rgba(0, 0, 0, 0.14), 0 1px 14px 0 rgba(0, 0, 0, 0.12);
  } @else if $level == 6 {
    box-shadow: 0 3px 5px -1px rgba(0, 0, 0, 0.2), 0 6px 10px 0 rgba(0, 0, 0, 0.14), 0 1px 18px 0 rgba(0, 0, 0, 0.12);
  } @else if $level == 7 {
    box-shadow: 0 4px 5px -2px rgba(0, 0, 0, 0.2), 0 7px 10px 1px rgba(0, 0, 0, 0.14), 0 2px 16px 1px rgba(0, 0, 0, 0.12);
  } @else if $level == 8 {
    box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2), 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12);
  } @else if $level == 9 {
    box-shadow: 0 5px 6px -3px rgba(0, 0, 0, 0.2), 0 9px 12px 1px rgba(0, 0, 0, 0.14), 0 3px 16px 2px rgba(0, 0, 0, 0.12);
  } @else if $level == 10 {
    box-shadow: 0 6px 6px -3px rgba(0, 0, 0, 0.2), 0 10px 14px 1px rgba(0, 0, 0, 0.14), 0 4px 18px 3px rgba(0, 0, 0, 0.12);
  } @else if $level == 11 {
    box-shadow: 0 6px 7px -4px rgba(0, 0, 0, 0.2), 0 11px 15px 1px rgba(0, 0, 0, 0.14), 0 4px 20px 3px rgba(0, 0, 0, 0.12);
  } @else if $level == 12 {
    box-shadow: 0 7px 8px -4px rgba(0, 0, 0, 0.2), 0 12px 17px 2px rgba(0, 0, 0, 0.14), 0 5px 22px 4px rgba(0, 0, 0, 0.12);
  } @else if $level == 13 {
    box-shadow: 0 7px 8px -4px rgba(0, 0, 0, 0.2), 0 13px 19px 2px rgba(0, 0, 0, 0.14), 0 5px 24px 4px rgba(0, 0, 0, 0.12);
  } @else if $level == 14 {
    box-shadow: 0 7px 9px -4px rgba(0, 0, 0, 0.2), 0 14px 21px 2px rgba(0, 0, 0, 0.14), 0 5px 26px 4px rgba(0, 0, 0, 0.12);
  } @else if $level == 15 {
    box-shadow: 0 8px 9px -5px rgba(0, 0, 0, 0.2), 0 15px 22px 2px rgba(0, 0, 0, 0.14), 0 6px 28px 5px rgba(0, 0, 0, 0.12);
  } @else if $level == 16 {
    box-shadow: 0 8px 10px -5px rgba(0, 0, 0, 0.2), 0 16px 24px 2px rgba(0, 0, 0, 0.14), 0 6px 30px 5px rgba(0, 0, 0, 0.12);
  } @else if $level == 17 {
    box-shadow: 0 8px 11px -5px rgba(0, 0, 0, 0.2), 0 17px 26px 2px rgba(0, 0, 0, 0.14), 0 6px 32px 5px rgba(0, 0, 0, 0.12);
  } @else if $level == 18 {
    box-shadow: 0 9px 11px -5px rgba(0, 0, 0, 0.2), 0 18px 28px 2px rgba(0, 0, 0, 0.14), 0 7px 34px 6px rgba(0, 0, 0, 0.12);
  } @else if $level == 19 {
    box-shadow: 0 9px 12px -6px rgba(0, 0, 0, 0.2), 0 19px 29px 2px rgba(0, 0, 0, 0.14), 0 7px 36px 6px rgba(0, 0, 0, 0.12);
  } @else if $level == 20 {
    box-shadow: 0 10px 13px -6px rgba(0, 0, 0, 0.2), 0 20px 31px 3px rgba(0, 0, 0, 0.14), 0 8px 38px 7px rgba(0, 0, 0, 0.12);
  } @else if $level == 21 {
    box-shadow: 0 10px 13px -6px rgba(0, 0, 0, 0.2), 0 21px 33px 3px rgba(0, 0, 0, 0.14), 0 8px 40px 7px rgba(0, 0, 0, 0.12);
  } @else if $level == 22 {
    box-shadow: 0 10px 14px -6px rgba(0, 0, 0, 0.2), 0 22px 35px 3px rgba(0, 0, 0, 0.14), 0 8px 42px 7px rgba(0, 0, 0, 0.12);
  } @else if $level == 23 {
    box-shadow: 0 11px 14px -7px rgba(0, 0, 0, 0.2), 0 23px 36px 3px rgba(0, 0, 0, 0.14), 0 9px 44px 8px rgba(0, 0, 0, 0.12);
  } @else if $level == 24 {
    box-shadow: 0 11px 15px -7px rgba(0, 0, 0, 0.2), 0 24px 38px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12);
  }
}

// Custom mixin for text overflow
@mixin text-ellipsis($width: 100%) {
  width: $width;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

// Custom mixin for clearfix
@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

// Custom mixin for visually hidden (for accessibility)
@mixin visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

// Custom mixin for focus styles
@mixin focus-styles {
  outline: 2px solid get-theme-color(primary, 500, 0.5);
  outline-offset: 2px;
}

// Custom mixin for print styles
@mixin print-styles {
  @media print {
    @content;
  }
}
